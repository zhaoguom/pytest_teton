{"name": "test_create_lbs[10.57.50.82-8014-https-root-cnbjrdqa1@-5bf8e2bf-a1ad-4d17-92ef-4bdc6cd7db9d-dd820c17-d3bd-45c1-922a-cd4ec27ec3b9-201-None]", "status": "failed", "statusDetails": {"message": "Failed: expected code is: 201, actual code is: 403", "trace": "server_name = '10.57.50.82', server_port = '8014', server_protocol = 'https', server_username = 'root', server_password = 'cnbjrdqa1@'\norganization_id = '5bf8e2bf-a1ad-4d17-92ef-4bdc6cd7db9d', site_id = 'dd820c17-d3bd-45c1-922a-cd4ec27ec3b9', status = 201, error = None\n\n    @pytest.mark.parametrize(\"server_name, server_port, server_protocol, server_username, server_password, organization_id, site_id, status, error\", testdata_lbs)\n    def test_create_lbs(server_name, server_port, server_protocol, server_username, server_password, organization_id, site_id, status, error):\n>       teton_server.create_lbs(server_name, server_port, server_protocol, server_username, server_password, organization_id, site_id, status, error)\n\ntest_pytest.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nserver\\tetonserver.py:53: in create_lbs\n    self.check_response_error(response, status, error)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <server.tetonserver.TetonServer object at 0x000001768855ED08>, response = <Response [403]>, status = 201, error = None\n\n    def check_response_error(self, response, status, error):\n        status_code = response.status_code\n        error_code = response.json()['errors'][0]['code']\n        if(status != status_code):\n            pytest.fail(\"expected code is: {}, actual code is: {}\".format(\n>               status, status_code))\nE           Failed: expected code is: 201, actual code is: 403\n\nserver\\tetonserver.py:28: Failed"}, "attachments": [{"name": "stdout", "source": "b91e0e87-193f-4aaf-b3e1-ebcc9ecbd320-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "server_name", "value": "'10.57.50.82'"}, {"name": "server_port", "value": "'8014'"}, {"name": "server_protocol", "value": "'https'"}, {"name": "server_username", "value": "'root'"}, {"name": "server_password", "value": "'cnbjrdqa1@'"}, {"name": "organization_id", "value": "'5bf8e2bf-a1ad-4d17-92ef-4bdc6cd7db9d'"}, {"name": "site_id", "value": "'dd820c17-d3bd-45c1-922a-cd4ec27ec3b9'"}, {"name": "status", "value": "201"}, {"name": "error", "value": "None"}], "start": 1586271381525, "stop": 1586271383707, "uuid": "90773b65-bf8e-46b0-b1f5-587ec8e40f75", "historyId": "d3f1122ea1f94fc97e073a91e9c5f18d", "testCaseId": "5b5228ddde467028a5f65375cdb5df78", "fullName": "test_pytest#test_create_lbs", "labels": [{"name": "suite", "value": "test_pytest"}, {"name": "host", "value": "zhaoguo-desktop"}, {"name": "thread", "value": "11552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_pytest"}]}